@using WebLMS.Models.ViewModel;
@model StudentCodingHomeworkResultViewModel


@if (@Model.IsTimedOut)
{
    <p>
        <span class="text-danger">Timeout</span>
        <br />
        Выполнение тестов или компиляция программы заняла больше @Model.TimeoutPeriod секунд
        <br />
        Пожалуйста просмотрите исходный код, возможно есть лишние или ненужные вызовы методов Console.ReadKey или Console.ReadLine
    </p>
}
else if (@Model.IsUnknownException)
{
    <p class="text-danger">Произошла <strong>ошибка</strong> во время выполнения. Попробуйте восстановить шаблон предварительно сохранив результат работы.</p>
    <p>Отправьте текст ниже преподавателю:</p>
    <pre>
@Model.ExceptionText
    </pre>
}
else if (@Model.IsCompilationFailed)
{
    <p class="text-danger">Компиляция <strong>неуспешна</strong>, ошибки:</p>
    <pre>
@Model.CompilationErrors
    </pre>
}
else if (@Model.TestRunResults == null || !@Model.TestRunResults.Any())
{
    <p class="text-info">
        Нет результатов.
        <br />
        Это либо первая попытка, либо для этого ДЗ нет тестов
    </p>
}
else
{
    @foreach (var run in @Model.TestRunResults)
    {
        string statusForUser = run.TestRunStatus == TestRunner.CommonTypes.TestRunStatus.Passed ? "Пройден" : "Провален";
        @if (run.TestType == CodingTestType.Method)
        {
            <p>
                <h5><span class="badge @(run.TestRunStatus == TestRunner.CommonTypes.TestRunStatus.Passed ? "badge-success" : "badge-danger")">@run.TestName @statusForUser</span></h5>
                <b>Исходные аргументы для функции: </b>@string.Join(", ", run.InputParams)
                @if (run.TestRunStatus == TestRunner.CommonTypes.TestRunStatus.Failed)
                {
                    <br />
                    <span><b>Ожидаемый результат: </b>@run.Expected, <b>Фактический результат: </b>@run.Actual</span>
                }
                else @if (run.TestRunStatus == TestRunner.CommonTypes.TestRunStatus.TargetException)
                {
                    <br />
                    <span>Произошло <strong>исключение</strong> во время выполнения теста. Проверьте что ваш код работает корректно при заданных исходных аргументах функции.</span>
                }
            </p>
        }
        else
        {
            <h5><span class="badge @(run.TestRunStatus == TestRunner.CommonTypes.TestRunStatus.Passed ? "badge-success" : "badge-danger")">@run.TestName @statusForUser</span></h5>
            @if (run.InputParams?.Any() ?? false)
            {
                <span>Исходные аргументы для функции: @string.Join(", ", run.InputParams)</span>
            }

            @if (run.TestRunStatus == TestRunner.CommonTypes.TestRunStatus.Failed)
            {
                @if (run.StepResults.Count() == 1)
                {
                    <div class="row">

                        @{
                            var stepResult = run.StepResults.First();
                            @if (stepResult.Input?.Any() ?? false)
                            {
                                <div class="col-md-3">
                                    <p><b>Что пользователь ввел</b></p>
                                    <pre>@string.Join(Environment.NewLine, stepResult.Input)</pre>
                                </div>
                            }
                        }

                        <div class="col-md-3">
                            <p><b>Ожидаемый вывод на экран</b></p>
                            <pre>@string.Join(Environment.NewLine, stepResult.Expected)</pre>
                        </div>
                        <div class="col-md-3">
                            <p><b>Фактический вывод на экран</b></p>
                            <pre>@string.Join(Environment.NewLine, stepResult.Actual)</pre>
                        </div>
                    </div>
                }
                else
                {
                    <div>
                        @foreach (var stepResult in @run.StepResults)
                        {
                            <p><b>@stepResult.Name @(stepResult.IsPassed ? "Пройден" : "Провален")</b></p>
                            <div class="row">
                                @if (stepResult.Input?.Any() ?? false)
                                {
                                    <div class="col-md-3">
                                        <p><b>Что пользователь ввел</b></p>
                                        <pre>@string.Join(Environment.NewLine, stepResult.Input)</pre>
                                    </div>
                                }
                                <div class="col-md-3">
                                    <p><b>Ожидаемый вывод на экран</b></p>
                                    <pre>@string.Join(Environment.NewLine, stepResult.Expected)</pre>
                                </div>
                                <div class="col-md-3">
                                    <p><b>Фактический вывод на экран</b></p>
                                    <pre>@string.Join(Environment.NewLine, stepResult.Actual)</pre>
                                </div>
                            </div>
                            <hr />
                        }
                    </div>
                }
            }
            else @if (run.TestRunStatus == TestRunner.CommonTypes.TestRunStatus.TargetException)
            {
                <br />
                <span>Произошло <strong>исключение</strong> во время выполнения теста. Проверьте что ваш код работает корректно при заданных исходных аргументах функции.</span>
            }
        }
    }
}